[{"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\index.js":"1","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\App.js":"2","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\reportWebVitals.js":"3","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Header.js":"4","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Banner.js":"5","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\data\\config.js":"6","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\context\\storeRewardsContext.js":"7","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Products.js":"8","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Product.js":"9","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Pagination.js":"10","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\PaginationMat.js":"11","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Filters.js":"12","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Sidebar.js":"13","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Modal.js":"14","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\ProductRedeem.js":"15","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\Home.js":"16","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\History.js":"17","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\LineSlider.js":"18","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Radios.js":"19"},{"size":637,"mtime":1613017983875,"results":"20","hashOfConfig":"21"},{"size":501,"mtime":1613021393514,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":2086,"mtime":1613018929714,"results":"24","hashOfConfig":"21"},{"size":692,"mtime":1613022153426,"results":"25","hashOfConfig":"21"},{"size":2622,"mtime":1613106388065,"results":"26","hashOfConfig":"21"},{"size":7915,"mtime":1613105547291,"results":"27","hashOfConfig":"21"},{"size":1940,"mtime":1612158520936,"results":"28","hashOfConfig":"21"},{"size":7907,"mtime":1613467621184,"results":"29","hashOfConfig":"21"},{"size":953,"mtime":1612154813679,"results":"30","hashOfConfig":"21"},{"size":1452,"mtime":1612157018963,"results":"31","hashOfConfig":"21"},{"size":6221,"mtime":1613106319442,"results":"32","hashOfConfig":"21"},{"size":6531,"mtime":1613107343006,"results":"33","hashOfConfig":"21"},{"size":1251,"mtime":1612675421462,"results":"34","hashOfConfig":"21"},{"size":821,"mtime":1612937850140,"results":"35","hashOfConfig":"21"},{"size":644,"mtime":1613021520576,"results":"36","hashOfConfig":"21"},{"size":2872,"mtime":1613107419366,"results":"37","hashOfConfig":"21"},{"size":734,"mtime":1613461965963,"results":"38","hashOfConfig":"21"},{"size":1553,"mtime":1613467514219,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ohpzi",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\index.js",[],["85","86"],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\App.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\reportWebVitals.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Header.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Banner.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\data\\config.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\context\\storeRewardsContext.js",["87","88"],"import React, {useState, useEffect } from \"react\";\r\nimport * as config from \"../data/config\";\r\nimport usePagination from \"../components/Pagination\";\r\nimport Product from \"../components/Product\";\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const[user, setUser] = useState([]);\r\n    const[userFetched, setUserFetched] = useState(false);\r\n    const[products, setProducts] = useState([]);\r\n    const[productsFetched, setProductsFetched] = useState(false);\r\n    const[filterProducts, setFilterProducts] = useState([]);\r\n    const[filterTerm, setFilterTerm] = useState('Todas');\r\n    const[filterPrice, setFilterPrice] = useState(true);\r\n    const[filterAlpha, setFilterAlpha] = useState(false);\r\n    const[initPoints, setInitPoints] = useState('');\r\n    const[comboCategory, setComboCategory] = useState([]);\r\n    const[xPosition, setX] = useState(100);\r\n    const[history, setHistory ] = useState([]);\r\n    const[historyFetched, setHistoryFetched] = useState(false);\r\n    const[filterHistory, setFilterHistory] = useState(true);\r\n    \r\n    const[redeemProduct, setRedeemProduct] = useState(config.demoProd);\r\n    const[postResponse, setPostResponse] = useState('');\r\n\r\n    /* Start Pagination config */\r\n    const prodctsCount = filterProducts.length;\r\n    let [page, setPage] = useState(1);\r\n    const PER_PAGE = 16;\r\n\r\n    const count = Math.ceil(prodctsCount / PER_PAGE);\r\n    const _DATA = usePagination(filterProducts, PER_PAGE);\r\n    //console.log('prodctsCount ', prodctsCount )\r\n\r\n    const handlePageChange = (e, p) => {\r\n        setPage(p);\r\n        _DATA.jump(p);\r\n    };\r\n    const productsList = _DATA.currentData().map(product => (\r\n      <Product\r\n        key={product._id}\r\n        id={product._id}\r\n        name={product.name}\r\n        cost={product.cost}\r\n        category={product.category}\r\n        img={product.img.hdUrl}\r\n      />\r\n  ));\r\n    /* end  Pagination config*/\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n        getProducts();\r\n        getHistory();   \r\n    }, []);\r\n\r\n    const getUser = () => {\r\n        config.getUser().then((response) => {\r\n            //console.log('user ', response.data.points)\r\n            setUser(response.data);\r\n            setUserFetched(true);\r\n            setInitPoints(response.data.points)\r\n        });\r\n      };\r\n    \r\n    const getProducts = (Term) => {\r\n        config.getProducts().then((response) => {\r\n          //console.log('response Prods', response.data);\r\n          // const products = response.data;\r\n          // if (Term && Term !== \"Todas\") {\r\n          //   const filterProd = products.filter((prod) => prod.category === Term);\r\n          //   setProducts(filterProd);\r\n          // } else {\r\n          //   setProducts(products);\r\n          // }\r\n          setProducts(response.data);\r\n          filterTerm === \"Todas\" ? setFilterProducts(response.data) : setFilterProducts([]);\r\n          const cate_names = response.data.map((p) => p.category );\r\n          const comboCategory = [...new Set(cate_names)];\r\n          //console.log('comboCategory ', comboCategory);\r\n          setComboCategory(comboCategory.sort());\r\n          setProductsFetched(true);\r\n      });\r\n    }\r\n\r\n    const getHistory = () => {\r\n      config.getHistory().then((response) => {\r\n          console.log('getHistory ', response.data);\r\n          const histDesc = response.data.reverse();\r\n          setHistory(histDesc);\r\n          //setHistory(response.data);\r\n          setHistoryFetched(true);\r\n      });\r\n    };\r\n\r\n    const sendPostProduct = (productId) => {\r\n      config.sendRedeemProd(productId)\r\n        .then((response) => {\r\n          console.log('response', response.data.message);\r\n          //setPostResponse(response.message);\r\n          setPostResponse('Ha canjeado sus puntos con éxito.');\r\n          getUser();\r\n          getHistory();\r\n        })\r\n        .catch((error) => {\r\n          console.log('error', error);\r\n          setPostResponse('Se ha producido un error.');\r\n        });\r\n    };\r\n\r\n    const FilterProdcts = (Term) => {\r\n      //alert(Term);\r\n      if(Term === \"Todas\"){\r\n        setFilterProducts(products); setFilterTerm(\"Todas\");\r\n        setPage(1);\r\n        _DATA.jump(1);\r\n      }else{\r\n        const newfilterProducts = products.filter((prod) => prod.category === Term);\r\n        setPage(1);\r\n        _DATA.jump(1);\r\n        //console.log(newfilterProducts);\r\n        setFilterProducts(newfilterProducts); setFilterTerm(Term);\r\n      }\r\n     \r\n      //console.log('newfilterProducts ', newfilterProducts);\r\n\r\n      // const {hotels, filterh } = this.state;\r\n      // let ProductsFiltro = [];\r\n      // ProductsFiltro = products.filter((prod) => prod.category === Term).filter(this.FiltroPrecio);\r\n      // hotelesFiltro = hotelesFiltro.filter(this.FiltroTamanio);\r\n      // hotelesFiltro = hotelesFiltro.filter(this.FiltroFechas);\r\n      // this.setState({ filterh: hotelesFiltro });\r\n\r\n      // if(filterTerm === \"Todas\"){\r\n      //   setProducts(response.data);\r\n      //   const cate_names = response.data.map((p) => p.category );\r\n      //   const comboCategory = [...new Set(cate_names)];\r\n      //   //console.log('comboCategory ', comboCategory);\r\n      //   setComboCategory(comboCategory.sort());\r\n      // }else{\r\n      //   const newfilterProducts = products.filter((prod) => prod.category === Term);\r\n      //   //console.log(newfilterProducts);\r\n      //   setProducts(newfilterProducts);\r\n      // }\r\n      // setProductsFetched(true);\r\n    }\r\n   \r\n    const OrderProdcts = (ValueChecked) => {\r\n      //console.log('activo? ', ValueChecked);\r\n      let isActive = ValueChecked; //->order Ascendente - menor a may\r\n      let orderProds = [];\r\n      setFilterPrice(ValueChecked);\r\n      if(isActive){\r\n        // -> ordenar < a >\r\n        orderProds = filterProducts.sort((a, b) => parseFloat(a.cost) - parseFloat(b.cost));\r\n      }else{\r\n        orderProds = filterProducts.sort((a, b) => parseFloat(b.cost) - parseFloat(a.cost));\r\n      }\r\n      setFilterProducts(orderProds);\r\n    }\r\n\r\n    const OrderAlpha = (ValueAlpha) => {\r\n      //console.log('activo? ', ValueAlpha);\r\n      let isActive = ValueAlpha; //->order AZ\r\n      let orderProds = [];\r\n      setFilterAlpha(ValueAlpha);\r\n      \r\n      if(isActive){\r\n        orderProds = filterProducts.sort((a,b) => (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : ((b.name.toLowerCase() > a.name.toLowerCase()) ? -1 : 0));\r\n      }else{\r\n        orderProds = filterProducts.sort((a,b) => (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : ((b.name.toLowerCase() > a.name.toLowerCase()) ? -1 : 0)).reverse();\r\n      }\r\n      setFilterProducts(orderProds);\r\n    }\r\n\r\n    const toggleMenuUser = () => {\r\n        if (xPosition === 100) {\r\n        setX(69);\r\n        } else {\r\n        setX(100);\r\n        }\r\n    };\r\n\r\n    const OrderHistory = (ValueChecked) => {\r\n      console.log('ordenar Hist?', ValueChecked);\r\n      let isActive = ValueChecked;\r\n      let orderHist = [];\r\n      setFilterHistory(ValueChecked);\r\n      if(isActive){\r\n        orderHist = history.reverse();\r\n      }else{\r\n        orderHist = history.reverse();\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <AppContext.Provider value={{ user, setUser, userFetched, setUserFetched, products, setProducts, getProducts, productsFetched, setProductsFetched,\r\n      FilterProdcts, filterProducts, filterTerm, setFilterTerm, setFilterProducts, prodctsCount, count, page, PER_PAGE, handlePageChange, productsList,\r\n      OrderProdcts, filterPrice, setFilterPrice, initPoints, setInitPoints, filterAlpha, OrderAlpha, comboCategory, setComboCategory,\r\n      xPosition, toggleMenuUser, history, setHistory, historyFetched, filterHistory, setFilterHistory, OrderHistory, redeemProduct, setRedeemProduct, sendPostProduct, postResponse, setPostResponse\r\n      }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\nexport default AppProvider;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Products.js",["89","90"],"import React, {useContext} from 'react';\r\nimport { AppContext } from \"../context/storeRewardsContext\";\r\n// import Product from './Product';\r\n// import { Pagination } from \"@material-ui/lab\";\r\n// import usePagination from \"./Pagination\";\r\n\r\nfunction Products() {\r\n    const { productsFetched, filterProducts, filterTerm, productsList } = useContext(AppContext);\r\n\r\n    //const prodctsCount = products.length;\r\n    //console.log('pppp ', products);\r\n\r\n    // let [page, setPage] = useState(1);\r\n    // const PER_PAGE = 16;\r\n\r\n    // const count = Math.ceil(prodctsCount / PER_PAGE);\r\n    // const _DATA = usePagination(products, PER_PAGE);\r\n\r\n    // const handleChange = (e, p) => {\r\n    //     setPage(p);\r\n    //     _DATA.jump(p);\r\n    // };\r\n\r\n    // const productsList = _DATA.currentData().map(product => (\r\n    //     <Product\r\n    //       key={product._id}\r\n    //       id={product._id}\r\n    //       name={product.name}\r\n    //       cost={product.cost}\r\n    //       category={product.category}\r\n    //       img={product.img.hdUrl}\r\n    //     />\r\n    // ));\r\n\r\n    \r\n    \r\n  return (\r\n\r\n    <section className=\"SectProds\">\r\n        <div className=\"container\">\r\n           \r\n            <div className=\"FullWidth\">\r\n                {/* <Pagination\r\n                    count={count}\r\n                    size=\"large\"\r\n                    page={page}\r\n                    variant=\"outlined\"\r\n                    shape=\"rounded\"\r\n                    onChange={handleChange}\r\n                /> */}\r\n                <div className=\"Products\">\r\n                    {\r\n                        //productsFetched && filterTerm === 'Todas'  \r\n                        productsFetched \r\n                        ? productsList\r\n                        :  <em>cargando productos...</em>\r\n                    }    \r\n                </div>\r\n\r\n            </div>       \r\n\r\n        </div>\r\n    </section>\r\n\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Product.js",["91","92"],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Pagination.js",["93"],"import React, { useState } from \"react\";\r\n\r\nfunction usePagination(data, itemsPerPage) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const maxPage = Math.ceil(data.length / itemsPerPage); \r\n  \r\n\r\n  function currentData() {\r\n    const begin = (currentPage - 1) * itemsPerPage;  \r\n    const end = begin + itemsPerPage; \r\n    return data.slice(begin, end);\r\n  }\r\n\r\n  function next() {\r\n    setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\r\n  }\r\n\r\n  function prev() {\r\n    setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\r\n  }\r\n\r\n  function jump(page) {\r\n    const pageNumber = Math.max(1, page);\r\n    setCurrentPage(currentPage => Math.min(pageNumber, maxPage));\r\n  }\r\n  //console.log('next ', next, 'prev ', prev, 'jump ', jump, 'currentData ', currentData, 'currentPage ', currentPage, 'maxPage ', maxPage)\r\n  return { next, prev, jump, currentData, currentPage, maxPage };\r\n}\r\n\r\nexport default usePagination;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\PaginationMat.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Filters.js",["94","95"],"import React, {useState, useContext} from 'react';\r\nimport { AppContext } from \"../context/storeRewardsContext\";\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useStyles, AntSwitch} from '../data/config';\r\n\r\nfunction Filters() {\r\n    const { productsFetched, comboCategory, FilterProdcts, filterTerm, OrderProdcts, filterPrice, setFilterPrice, setFilterProducts, filterProducts,\r\n      filterAlpha, OrderAlpha} = useContext(AppContext);\r\n    //console.log('filterAlpha --->', filterAlpha);\r\n\r\n    const classes = useStyles();\r\n    const [activeFilter, setActiveFilter] = useState('');\r\n\r\n    const OrderByPrice = (orderType) => {\r\n      ///console.log('orderType ', orderType);\r\n      let newOrderProds = [];\r\n      setFilterPrice(orderType);\r\n      if(orderType === \"Lowest\"){\r\n        setActiveFilter(\"Lowest\");\r\n        newOrderProds = filterProducts.sort((a, b) => parseFloat(a.cost) - parseFloat(b.cost));\r\n      }else{\r\n        setActiveFilter(\"Highest\");\r\n        newOrderProds = filterProducts.sort((a, b) => parseFloat(b.cost) - parseFloat(a.cost));\r\n      }\r\n      //console.log('orderProds ', newOrderProds);\r\n      setFilterProducts(newOrderProds);\r\n      \r\n    }\r\n    \r\n\r\n  return (\r\n\r\n    <div className=\"UserActions\">\r\n\r\n        <div className=\"container\">\r\n            {productsFetched \r\n             ?\r\n                (\r\n                    <>\r\n                        <FormControl id=\"W-310\" className={classes.formControl}>\r\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                            Categoría:\r\n                            </InputLabel>\r\n                            <Select\r\n                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            id=\"demo-simple-select-placeholder-label\"\r\n                            value={filterTerm}\r\n                            onChange={(e) => FilterProdcts(e.target.value)}\r\n                            // displayEmpty\r\n                            className={classes.selectEmpty}\r\n                            >\r\n                            <MenuItem value=\"Todas\">Todas</MenuItem>\r\n                            {comboCategory.map((element, i) => (\r\n                                //<option key={i} value={element}>{element}</option>\r\n                                <MenuItem key={i} value={element}>{element}</MenuItem>\r\n                            ))}\r\n                            {/* <MenuItem value={10}>Ten</MenuItem>\r\n                            <MenuItem value={20}>Twenty</MenuItem>\r\n                            <MenuItem value={30}>Thirty</MenuItem> */}\r\n                            </Select>\r\n                            <FormHelperText>Seleccionar categoría</FormHelperText>\r\n                        </FormControl>\r\n                        {/* <label>Categoría: </label> */}\r\n                        {/* <select onChange={(e) => getProducts(e.target.value)}>\r\n                            <option value=\"Todas\"> Todas </option>\r\n                            {comboCategory.map((element, i) => (\r\n                                <option key={i} value={element}>{element}</option>\r\n                            ))}\r\n                        </select> */}\r\n                        \r\n                        {/* <select onChange={(e) => FilterProdcts(e.target.value)}>\r\n                            <option value=\"Todas\"> Todas </option>\r\n                            {comboCategory.map((element, i) => (\r\n                                <option key={i} value={element}>{element}</option>\r\n                            ))}\r\n                        </select> */}\r\n\r\n                        <button name=\"Lowest\" className={`BtnFilterPrice ${activeFilter === 'Lowest' ? 'active' : ''}`} onClick={(e) => OrderByPrice(e.target.name)}>Lowest price</button>\r\n                        <button name=\"Highest\" className={`BtnFilterPrice Lst ${activeFilter === 'Highest' ? 'active' : ''}`} onClick={(e) => OrderByPrice(e.target.name)}>Highest price</button>\r\n\r\n                        <FormControl id=\"FilterAlpha\" className={classes.formControl}>\r\n                            <Typography component=\"div\">\r\n                                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                                <Grid item>Z-A</Grid>\r\n                                <Grid item>\r\n                                    <AntSwitch checked={filterAlpha} onChange={(e) => OrderAlpha(e.target.checked)} name=\"checkedAlpha\" />\r\n                                </Grid>\r\n                                <Grid item>A-Z</Grid>\r\n                                </Grid>\r\n                            </Typography>\r\n                        </FormControl>\r\n\r\n\r\n                        {/* <FormControl className={classes.formControl}>\r\n                            <Typography component=\"div\">\r\n                                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                                <Grid item>Highest price</Grid>\r\n                                <Grid item>\r\n                                    {/* checked={state.checkedC} * /}\r\n                                    <AntSwitch checked={filterPrice} onChange={(e) => OrderProdcts(e.target.checked)} name=\"checkedC\" />\r\n                                    {/* <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"OrderProdsEvt\" /> * /}\r\n                                </Grid>\r\n                                <Grid item>Lowest price</Grid>\r\n                                </Grid>\r\n                            </Typography>\r\n                        </FormControl> */}\r\n\r\n                        \r\n                        \r\n                    </>\r\n                )\r\n             :  <em>cargando categorias...</em>    \r\n            }    \r\n        </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Filters;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Sidebar.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Modal.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\ProductRedeem.js",["96"],"import React from 'react';\r\n\r\nfunction ProductRedeem(props) {\r\n    const {idOp, idProd, category, cost, createDate, name, img} = props;\r\n    const str = createDate;\r\n    const date = str.substring(0, 10);//YYYY-MM-DD\r\n\r\n    const fields = date.split('-');\r\n    const year   = fields[0];\r\n    const month  = fields[1];\r\n    const day    = fields[2]\r\n    const dateOk  = day+'/'+month+'/'+year;  \r\n\r\n  return (\r\n    \r\n    <div id={idOp} className=\"Product Redeem\">\r\n        <figure>\r\n            <img src={img} alt={name}/>\r\n        </figure>\r\n        <div className=\"Info\">\r\n            <p>{category}</p>\r\n            <h4> <strong>{name}</strong> | {cost} points</h4>\r\n            <p> Canjeado el: {dateOk} </p>\r\n            <p> ID: {idOp} </p>\r\n        </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default ProductRedeem;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\Home.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\History.js",["97"],"import React, {useContext} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppContext } from \"./context/storeRewardsContext\";\r\nimport Header from './components/Header';\r\nimport Banner from './components/Banner';\r\nimport Sidebar from './components/Sidebar';\r\nimport ProductRedeem from \"./components/ProductRedeem\";\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useStyles, AntSwitch} from './data/config';\r\n\r\nfunction History() {\r\n\r\n  const { toggleMenuUser, history, historyFetched, filterHistory, OrderHistory } = useContext(AppContext);\r\n  \r\n  const classes = useStyles();\r\n\r\n  let ListRedeem;\r\n  if( history.length === 0 ){\r\n    ListRedeem = <h6>Todavía no ha canjeado <br/> ningún producto.</h6>;\r\n  }else{\r\n    \r\n    ListRedeem = history.map(product => (\r\n      <ProductRedeem\r\n        key={product._id}\r\n        idOp={product._id}\r\n        idProd={product.productId}\r\n        category={product.category}\r\n        cost={product.cost}\r\n        createDate={product.createDate}\r\n        name={product.name}\r\n        img={product.img.hdUrl}\r\n      />\r\n  ));\r\n  }\r\n  \r\n  return (\r\n     \r\n     <div id=\"History\">\r\n      \r\n        <Sidebar width={30} height={\"100vh\"}/>\r\n        \r\n        <Header/>\r\n\r\n        <Banner bannerAlt=\"electronics\" bannerSection=\"history\" />\r\n\r\n        <div className=\"HistRedeem\">\r\n          <div className=\"container\">\r\n            {historyFetched\r\n                ? ( \r\n                    <>\r\n                      <div className=\"WrpTitle\">\r\n                        <h3>Productos canjeados:</h3>\r\n                        <FormControl id=\"FilterHistory\" className={classes.formControl}>\r\n                            <Typography component=\"div\">\r\n                                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                                <Grid item>Más antiguo</Grid>\r\n                                <Grid item>\r\n                                    <AntSwitch checked={filterHistory} onChange={(e) => OrderHistory(e.target.checked)} name=\"checkedHistory\" />\r\n                                </Grid>\r\n                                <Grid item>Más reciente</Grid>\r\n                                </Grid>\r\n                            </Typography>\r\n                        </FormControl>\r\n                      </div>\r\n                      <div className=\"ProdGrid\">{ListRedeem} </div>\r\n\r\n                      <Link to=\"/\">\r\n                        <button className=\"btnAll w40\" > Volver </button>\r\n                      </Link>\r\n                    </>\r\n                  )  \r\n                : <em>cargando historial...</em>  \r\n            }\r\n          </div>  \r\n        </div>\r\n\r\n\r\n             \r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default History;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\LineSlider.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Radios.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":56,"column":8,"nodeType":"104","endLine":56,"endColumn":10,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":193,"column":9,"nodeType":"108","messageId":"109","endLine":193,"endColumn":18},{"ruleId":"106","severity":1,"message":"110","line":8,"column":30,"nodeType":"108","messageId":"109","endLine":8,"endColumn":44},{"ruleId":"106","severity":1,"message":"111","line":8,"column":46,"nodeType":"108","messageId":"109","endLine":8,"endColumn":56},{"ruleId":"106","severity":1,"message":"112","line":6,"column":8,"nodeType":"108","messageId":"109","endLine":6,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":164,"column":22,"nodeType":"115","messageId":"116","endLine":164,"endColumn":31},{"ruleId":"106","severity":1,"message":"117","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"118","line":14,"column":72,"nodeType":"108","messageId":"109","endLine":14,"endColumn":84},{"ruleId":"106","severity":1,"message":"119","line":14,"column":86,"nodeType":"108","messageId":"109","endLine":14,"endColumn":97},{"ruleId":"106","severity":1,"message":"120","line":4,"column":18,"nodeType":"108","messageId":"109","endLine":4,"endColumn":24},{"ruleId":"106","severity":1,"message":"121","line":16,"column":11,"nodeType":"108","messageId":"109","endLine":16,"endColumn":25},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-unused-vars","'orderHist' is assigned a value but never used.","Identifier","unusedVar","'filterProducts' is assigned a value but never used.","'filterTerm' is assigned a value but never used.","'LineSlider' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'React' is defined but never used.","'OrderProdcts' is assigned a value but never used.","'filterPrice' is assigned a value but never used.","'idProd' is assigned a value but never used.","'toggleMenuUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [getProducts]",{"range":"127","text":"128"},[2048,2050],"[getProducts]"]