[{"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\index.js":"1","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\App.js":"2","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\reportWebVitals.js":"3","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Header.js":"4","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Banner.js":"5","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\data\\config.js":"6","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\context\\storeRewardsContext.js":"7","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Products.js":"8","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Product.js":"9","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Pagination.js":"10","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\PaginationMat.js":"11","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Filters.js":"12","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Sidebar.js":"13","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Modal.js":"14","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\ProductRedeem.js":"15","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\Home.js":"16","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\History.js":"17","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\LineSlider.js":"18","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Radios.js":"19","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\use-previous.js":"20","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\ModalBuy.js":"21","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Loader.js":"22","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\CircleLoader.js":"23","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\PageNotFound.js":"24"},{"size":637,"mtime":1613017983875,"results":"25","hashOfConfig":"26"},{"size":593,"mtime":1614488679284,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":2676,"mtime":1614226446964,"results":"29","hashOfConfig":"26"},{"size":692,"mtime":1613022153426,"results":"30","hashOfConfig":"26"},{"size":2962,"mtime":1614319453524,"results":"31","hashOfConfig":"26"},{"size":9616,"mtime":1614490186731,"results":"32","hashOfConfig":"26"},{"size":2300,"mtime":1614229291353,"results":"33","hashOfConfig":"26"},{"size":10657,"mtime":1614320060139,"results":"34","hashOfConfig":"26"},{"size":953,"mtime":1612154813679,"results":"35","hashOfConfig":"26"},{"size":1461,"mtime":1614229028020,"results":"36","hashOfConfig":"26"},{"size":6345,"mtime":1614226867493,"results":"37","hashOfConfig":"26"},{"size":7284,"mtime":1614490309794,"results":"38","hashOfConfig":"26"},{"size":1990,"mtime":1614319051304,"results":"39","hashOfConfig":"26"},{"size":821,"mtime":1612937850140,"results":"40","hashOfConfig":"26"},{"size":603,"mtime":1614488717904,"results":"41","hashOfConfig":"26"},{"size":3137,"mtime":1614491378367,"results":"42","hashOfConfig":"26"},{"size":734,"mtime":1613461965963,"results":"43","hashOfConfig":"26"},{"size":1593,"mtime":1613707691865,"results":"44","hashOfConfig":"26"},{"size":524,"mtime":1613797180589,"results":"45","hashOfConfig":"26"},{"size":4644,"mtime":1614318297904,"results":"46","hashOfConfig":"26"},{"size":400,"mtime":1614312015023,"results":"47","hashOfConfig":"26"},{"size":691,"mtime":1614228016633,"results":"48","hashOfConfig":"26"},{"size":11325,"mtime":1614489299480,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1ohpzi",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\index.js",[],["107","108"],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\App.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\reportWebVitals.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Header.js",["109"],"import React, {useState, useContext, useRef} from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppContext } from \"../context/storeRewardsContext\";\r\nimport logo from '../assets/aerolab-logo.svg';// Tell Webpack this JS file uses this image\r\nimport coin from '../assets/icons/coin.svg';\r\nimport Modal from './Modal';\r\nimport ModalBuy from './ModalBuy';\r\nimport Loader from './Loader';\r\n\r\nfunction Header() {\r\n    const { user, userFetched, toggleMenuUser } = useContext(AppContext);\r\n    \r\n    const modalBuy = useRef(null);\r\n\r\n    const modalBuyClose = (e) => {\r\n      console.log('. ', modalBuy);\r\n      modalBuy.current.close();\r\n    }\r\n    \r\n    //const[user, setUser] = useState();\r\n\r\n    // useEffect(() => {\r\n    //     const headers = {\r\n    //         method: \"GET\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDA4ODcxYTdlNzE4NzAwMjBlMzhlZTAiLCJpYXQiOjE2MTExNzE2MTB9.gRqbCL86qsiOXjaSoQeyuhM5e-wjonyGpb4gZqIf6sk\"\r\n    //         }\r\n    //     } \r\n    //     fetch(\"https://coding-challenge-api.aerolab.co/user/me\", headers)\r\n    //     .then((header) => {\r\n    //         return header.json();\r\n    //     })\r\n    //     .then((body) => {\r\n    //         setUser(body);\r\n    //         setftch(true);\r\n    //     });\r\n    // },[]);\r\n\r\n  return (\r\n\r\n    <header>\r\n        <div className=\"container\">\r\n            <div className=\"ColLeft\">\r\n              <NavLink to=\"/\" exact={true} activeClassName=\"Acti-ve Nav-Link\">\r\n                <h1><img className=\"Logo\" src={logo} alt=\"Logo\"/></h1>\r\n              </NavLink>  \r\n            </div>\r\n            <div className=\"ColRight\">\r\n                <h2 className=\"UserName\">\r\n                {\r\n                  userFetched\r\n                    ? ( <strong>\r\n                          <em className=\"UsName\">Hola <strong>{user.name}</strong> </em>\r\n                          <span className=\"Points\">{user.points} <img src={coin} alt=\"Puntos\"/></span>\r\n                          <span className=\"BuyPoints\" onClick={ ()=> modalBuy.current.open() }>&nbsp;</span>\r\n                          <span className=\"Config\" onClick={() => toggleMenuUser() }>&nbsp;</span>\r\n                        </strong>\r\n                      ) \r\n                    : <em><span className=\"Loader Inline\"><Loader/></span>cargando usuario...</em>\r\n                }\r\n                </h2>\r\n            </div>       \r\n\r\n        </div>\r\n\r\n        <Modal ref={modalBuy} >\r\n            <ModalBuy modalBuyClose={modalBuyClose} />\r\n        </Modal>\r\n    </header>\r\n\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Banner.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\data\\config.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\context\\storeRewardsContext.js",["110","111"],"import React, {useState, useEffect } from \"react\";\r\nimport * as config from \"../data/config\";\r\nimport usePagination from \"../components/Pagination\";\r\nimport Product from \"../components/Product\";\r\n//import usePrevious from '../components/use-previous';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const[user, setUser] = useState([]);\r\n    const[userFetched, setUserFetched] = useState(false);\r\n    const[products, setProducts] = useState([]);\r\n    const[productsFetched, setProductsFetched] = useState(false);\r\n    const[filterProducts, setFilterProducts] = useState([]);\r\n    const[filterTerm, setFilterTerm] = useState('Todas');\r\n    const[filterPrice, setFilterPrice] = useState(true);\r\n    const[filterAlpha, setFilterAlpha] = useState(false);\r\n    const[initPoints, setInitPoints] = useState('');\r\n    const[comboCategory, setComboCategory] = useState([]);\r\n    const[xPosition, setX] = useState(104);\r\n    const[history, setHistory ] = useState([]);\r\n    const[historyFetched, setHistoryFetched] = useState(false);\r\n    const[filterHistory, setFilterHistory] = useState(true);\r\n    \r\n    const[redeemProduct, setRedeemProduct] = useState(config.demoProd);\r\n    //const[postResponse, setPostResponse] = useState('');\r\n    const[postResponse, setPostResponse] = useState({\r\n      info : '',\r\n      status: ''\r\n      });\r\n    const[pointsResponse, setPointsResponse] = useState({\r\n      info : '',\r\n      status: ''\r\n    });\r\n    const[puntosCuentas, setPuntosCuentas] = useState(null);\r\n\r\n\r\n    //const prevPoints = usePrevious(initPoints);\r\n\r\n    /* Start Pagination config */\r\n    const prodctsCount = filterProducts.length;\r\n    let [page, setPage] = useState(1);\r\n    const PER_PAGE = 16;\r\n\r\n    const count = Math.ceil(prodctsCount / PER_PAGE);\r\n    const _DATA = usePagination(filterProducts, PER_PAGE);\r\n    //console.log('prodctsCount ', prodctsCount )\r\n\r\n    const handlePageChange = (e, p) => {\r\n        setPage(p);\r\n        _DATA.jump(p);\r\n    };\r\n    const productsList = _DATA.currentData().map(product => (\r\n      <Product\r\n        key={product._id}\r\n        id={product._id}\r\n        name={product.name}\r\n        cost={product.cost}\r\n        category={product.category}\r\n        img={product.img.hdUrl}\r\n      />\r\n  ));\r\n    /* end  Pagination config*/\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n        getProducts();\r\n        getHistory();   \r\n    }, []);\r\n\r\n    const getUser = () => {\r\n        config.getUser().then((response) => {\r\n            //console.log('user ', response.data.points)\r\n            setUser(response.data);\r\n            setUserFetched(true);\r\n            setInitPoints(response.data.points)\r\n        });\r\n      };\r\n    \r\n    const getProducts = (Term) => {\r\n        config.getProducts().then((response) => {\r\n          //console.log('response Prods', response.data);\r\n          // const products = response.data;\r\n          // if (Term && Term !== \"Todas\") {\r\n          //   const filterProd = products.filter((prod) => prod.category === Term);\r\n          //   setProducts(filterProd);\r\n          // } else {\r\n          //   setProducts(products);\r\n          // }\r\n          setProducts(response.data);\r\n          filterTerm === \"Todas\" ? setFilterProducts(response.data) : setFilterProducts([]);\r\n          const cate_names = response.data.map((p) => p.category );\r\n          const comboCategory = [...new Set(cate_names)];\r\n          //console.log('comboCategory ', comboCategory);\r\n          setComboCategory(comboCategory.sort());\r\n          setProductsFetched(true);\r\n      });\r\n    }\r\n\r\n    const getHistory = () => {\r\n      config.getHistory().then((response) => {\r\n          console.log('getHistory ', response.data);\r\n          const histDesc = response.data.reverse();\r\n          setHistory(histDesc);\r\n          //setHistory(response.data);\r\n          setHistoryFetched(true);\r\n      });\r\n    };\r\n\r\n    const sendPostProduct = (productId) => {\r\n      //console.log(productId)\r\n      config.sendRedeemProd(productId)\r\n        .then((response) => {\r\n          console.log('response', response);\r\n          console.log('response', response.status);\r\n          console.log('response', response.data.message);\r\n          //setPostResponse(response.message);\r\n          //setPostResponse('Ha canjeado sus puntos con éxito.');\r\n          setPostResponse({\r\n            info : 'Ha canjeado sus puntos con éxito.',\r\n            status: response.status\r\n          });\r\n          setPuntosCuentas(initPoints);\r\n          getUser();\r\n          getHistory();\r\n        })\r\n        .catch((error) => {\r\n          console.log('error', error);\r\n          //setPostResponse('Se ha producido un error.');\r\n          setPostResponse({\r\n            info : 'Se ha producido un error.',\r\n            status: error\r\n          });\r\n        });\r\n    };\r\n\r\n    const sendPostPoints = (amount) => {\r\n      config.getPoints(amount)\r\n        .then((response) => {\r\n          //console.log('response', response.data.message);\r\n          //setPostResponse(response.message);\r\n          //setPointsResponse('Ha actualizado sus puntos con éxito.');\r\n          setPointsResponse({\r\n            info : 'Ha canjeado sus puntos con éxito.',\r\n            status: response.status\r\n          });\r\n          setPuntosCuentas(initPoints);\r\n          getUser();\r\n        })\r\n        .catch((error) => {\r\n          console.log('error', error);\r\n          //setPointsResponse('Se ha producido un error.');\r\n          setPointsResponse({\r\n            info : 'Se ha producido un error.',\r\n            status: error\r\n          });\r\n          \r\n        });  \r\n    }\r\n\r\n\r\n    const FilterProdcts = (Term) => {\r\n      //alert(Term);\r\n      if(Term === \"Todas\"){\r\n        setFilterProducts(products); setFilterTerm(\"Todas\");\r\n        setPage(1);\r\n        _DATA.jump(1);\r\n      }else{\r\n        const newfilterProducts = products.filter((prod) => prod.category === Term);\r\n        setPage(1);\r\n        _DATA.jump(1);\r\n        //console.log(newfilterProducts);\r\n        setFilterProducts(newfilterProducts); setFilterTerm(Term);\r\n      }\r\n     \r\n      //console.log('newfilterProducts ', newfilterProducts);\r\n\r\n      // const {hotels, filterh } = this.state;\r\n      // let ProductsFiltro = [];\r\n      // ProductsFiltro = products.filter((prod) => prod.category === Term).filter(this.FiltroPrecio);\r\n      // hotelesFiltro = hotelesFiltro.filter(this.FiltroTamanio);\r\n      // hotelesFiltro = hotelesFiltro.filter(this.FiltroFechas);\r\n      // this.setState({ filterh: hotelesFiltro });\r\n\r\n      // if(filterTerm === \"Todas\"){\r\n      //   setProducts(response.data);\r\n      //   const cate_names = response.data.map((p) => p.category );\r\n      //   const comboCategory = [...new Set(cate_names)];\r\n      //   //console.log('comboCategory ', comboCategory);\r\n      //   setComboCategory(comboCategory.sort());\r\n      // }else{\r\n      //   const newfilterProducts = products.filter((prod) => prod.category === Term);\r\n      //   //console.log(newfilterProducts);\r\n      //   setProducts(newfilterProducts);\r\n      // }\r\n      // setProductsFetched(true);\r\n    }\r\n   \r\n    const OrderProdcts = (ValueChecked) => {\r\n      //console.log('activo? ', ValueChecked);\r\n      let isActive = ValueChecked; //->order Ascendente - menor a may\r\n      let orderProds = [];\r\n      setFilterPrice(ValueChecked);\r\n      if(isActive){\r\n        // -> ordenar < a >\r\n        orderProds = filterProducts.sort((a, b) => parseFloat(a.cost) - parseFloat(b.cost));\r\n      }else{\r\n        orderProds = filterProducts.sort((a, b) => parseFloat(b.cost) - parseFloat(a.cost));\r\n      }\r\n      setFilterProducts(orderProds);\r\n    }\r\n\r\n    const OrderAlpha = (ValueAlpha) => {\r\n      //console.log('activo? ', ValueAlpha);\r\n      let isActive = ValueAlpha; //->order AZ\r\n      let orderProds = [];\r\n      setFilterAlpha(ValueAlpha);\r\n      \r\n      if(isActive){\r\n        orderProds = filterProducts.sort((a,b) => (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : ((b.name.toLowerCase() > a.name.toLowerCase()) ? -1 : 0));\r\n      }else{\r\n        orderProds = filterProducts.sort((a,b) => (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : ((b.name.toLowerCase() > a.name.toLowerCase()) ? -1 : 0)).reverse();\r\n      }\r\n      setFilterProducts(orderProds);\r\n    }\r\n\r\n    const toggleMenuUser = () => {\r\n        if (xPosition === 104) {\r\n        setX(69);\r\n        } else {\r\n        setX(104);\r\n        }\r\n    };\r\n\r\n    const OrderHistory = (ValueChecked) => {\r\n      console.log('ordenar Hist?', ValueChecked);\r\n      let isActive = ValueChecked;\r\n      let orderHist = [];\r\n      setFilterHistory(ValueChecked);\r\n      if(isActive){\r\n        orderHist = history.reverse();\r\n      }else{\r\n        orderHist = history.reverse();\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <AppContext.Provider value={{ user, setUser, userFetched, setUserFetched, products, setProducts, getProducts, productsFetched, setProductsFetched,\r\n      FilterProdcts, filterProducts, filterTerm, setFilterTerm, setFilterProducts, prodctsCount, count, page, PER_PAGE, handlePageChange, productsList,\r\n      OrderProdcts, filterPrice, setFilterPrice, initPoints, setInitPoints, filterAlpha, OrderAlpha, comboCategory, setComboCategory,\r\n      xPosition, toggleMenuUser, history, setHistory, historyFetched, filterHistory, setFilterHistory, OrderHistory, redeemProduct, setRedeemProduct,\r\n      sendPostProduct, postResponse, setPostResponse, sendPostPoints, pointsResponse, setPointsResponse, puntosCuentas, setPuntosCuentas\r\n      }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\nexport default AppProvider;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Products.js",["112","113"],"import React, {useContext} from 'react';\r\nimport { AppContext } from \"../context/storeRewardsContext\";\r\nimport PaginationMat from './PaginationMat';\r\nimport CircleLoader from './CircleLoader';\r\n// import { Pagination } from \"@material-ui/lab\";\r\n// import usePagination from \"./Pagination\";\r\n\r\nfunction Products() {\r\n    const { productsFetched, filterProducts, filterTerm, productsList } = useContext(AppContext);\r\n\r\n    //const prodctsCount = products.length;\r\n    //console.log('pppp ', products);\r\n\r\n    // let [page, setPage] = useState(1);\r\n    // const PER_PAGE = 16;\r\n\r\n    // const count = Math.ceil(prodctsCount / PER_PAGE);\r\n    // const _DATA = usePagination(products, PER_PAGE);\r\n\r\n    // const handleChange = (e, p) => {\r\n    //     setPage(p);\r\n    //     _DATA.jump(p);\r\n    // };\r\n\r\n    // const productsList = _DATA.currentData().map(product => (\r\n    //     <Product\r\n    //       key={product._id}\r\n    //       id={product._id}\r\n    //       name={product.name}\r\n    //       cost={product.cost}\r\n    //       category={product.category}\r\n    //       img={product.img.hdUrl}\r\n    //     />\r\n    // ));\r\n\r\n    \r\n    \r\n  return (\r\n\r\n    <section className=\"SectProds\">\r\n        <div className=\"container\">\r\n           \r\n            <div className=\"FullWidth\">\r\n                {/* <Pagination\r\n                    count={count}\r\n                    size=\"large\"\r\n                    page={page}\r\n                    variant=\"outlined\"\r\n                    shape=\"rounded\"\r\n                    onChange={handleChange}\r\n                /> */}\r\n                <div className=\"Products\">\r\n                    {\r\n                        //productsFetched && filterTerm === 'Todas'  \r\n                        productsFetched \r\n                        ? (\r\n                            <>\r\n                            <PaginationMat />\r\n                            <div className=\"WrapProds\">\r\n                                {productsList}\r\n                            </div>    \r\n                            <PaginationMat />\r\n                            </>\r\n                        )  \r\n                        :  <CircleLoader/>\r\n                    }    \r\n                </div>\r\n\r\n            </div>       \r\n\r\n        </div>\r\n    </section>\r\n\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Product.js",["114","115","116","117","118","119","120"],"import React, {useState, useContext, useRef } from 'react';\r\nimport { AppContext } from \"../context/storeRewardsContext\";\r\nimport coin from '../assets/icons/coin.svg';\r\nimport localSwitch from '../assets/Switch-x2.png';\r\nimport check from '../assets/icons/check.svg';\r\nimport fail from '../assets/icons/fail.svg';\r\n\r\nimport Modal from './Modal';\r\nimport ModalBuy from './ModalBuy';\r\nimport LineSlider from './LineSlider';\r\nimport Radios from './Radios';\r\nimport usePrevious from './use-previous';\r\n\r\n\r\n\r\nfunction Product(props){\r\n    const { initPoints, redeemProduct, setRedeemProduct, sendPostProduct, postResponse, setPostResponse, sendPostPoints, pointsResponse,\r\n         setPointsResponse, puntosCuentas, setPuntosCuentas } = useContext(AppContext);\r\n    \r\n    console.log('respuesta en products ', postResponse)     \r\n    \r\n    // const [pointsAdd, setPointsAdd] = useState('1000');\r\n    // const [warningPoints, setWarningPoints] = useState('');\r\n    // const [saldoPoints, setSaldoPoints] = useState(initPoints);\r\n    // const [saldoRedeem, setSaldoRedeem] = useState(initPoints);\r\n    //console.log('saldoRedeem ', saldoRedeem);\r\n\r\n    //const prevPoints = usePrevious(saldoPoints);\r\n    //console.log('prevPoints ', prevPoints);\r\n    // const prevSaldoRedeem = usePrevious(saldoRedeem);\r\n    // console.log('prevSaldoRedeem ', prevSaldoRedeem);\r\n\r\n    //console.log('initPoints ', initPoints, ' aa')\r\n    //console.log('puntosCuentas ', puntosCuentas);\r\n    //console.log('props ::: ', props);\r\n    let {id, name, cost, category, img} = props;\r\n    let needPoints = '';\r\n    //let warningPoints = '';\r\n\r\n\r\n    const modalRedeem = useRef(null);\r\n    const modalBuy = useRef(null);\r\n\r\n    if(initPoints < cost){\r\n        needPoints = cost - initPoints\r\n    }\r\n    //Esta imagen viene con una sombra y queda mal \r\n    if( img === \"https://coding-challenge-api.aerolab.co/images/Switch-x2.png\"){\r\n        img = localSwitch;\r\n    }\r\n\r\n    const redeemProdFn = (id,name,cost) => {\r\n        //console.log('id,name,cost ', id, ' ', name, ' ', cost);\r\n        const prod = {\r\n            \"id\": id,\r\n            \"name\": name,\r\n            \"cost\": cost\r\n        };\r\n        setRedeemProduct(prod);\r\n        //console.log(prod);\r\n        console.log('modalRedeem ', modalRedeem);\r\n        modalRedeem.current.open();\r\n    }\r\n    // const openModalBuy = () => {\r\n    //     console.log('modalBuy ', modalBuy);\r\n    //     modalBuy.current.open();\r\n    // }\r\n\r\n    const nuevoSaldo = initPoints - redeemProduct.cost;\r\n    // const nuevoSaldoRedeemOk = prevSaldoRedeem - redeemProduct.cost;\r\n    const nuevoSaldoRedeemOk = puntosCuentas - redeemProduct.cost;\r\n    \r\n    //PuntosCuentas - redeemProduct.cost;\r\n\r\n    // const nuevoSaldoPoints = initPoints + parseInt(pointsAdd);\r\n    // const nuevoSaldoPointsOk = puntosCuentas + parseInt(pointsAdd);\r\n\r\n    const redeemResetMsgFn = () => {\r\n        setPostResponse({\r\n            info : '',\r\n            status: ''\r\n        });\r\n        setPuntosCuentas(null);\r\n        modalRedeem.current.close();\r\n    }\r\n    const modalBuyClose = (e) => {\r\n        console.log('. ', modalBuy);\r\n        modalBuy.current.close();\r\n    }\r\n    // const pointsResetMsgFn = () => {\r\n    //     setPointsResponse('');\r\n    //     setPuntosCuentas(null);\r\n    //     modalBuy.current.close();\r\n    // }\r\n\r\n    // const handlePoints = (e, newValue) => {\r\n    //     const NewPuntos = newValue;\r\n    //     setPointsAdd(NewPuntos);\r\n    //     if( pointsAdd === 1000 || pointsAdd === 5000 || pointsAdd === 7500 ){    \r\n    //         setWarningPoints('');\r\n    //     }else{\r\n    //         setWarningPoints('Debe seleccionar uno de los valores indicados.');\r\n    //     }\r\n    // }\r\n    //.toFixed(0)parseInt(\r\n\r\n    // const handlePoints = (e) => {\r\n    //     const NewPuntos = e.target.value;\r\n    //     console.log(typeof NewPuntos, ' ', NewPuntos);\r\n    //     setPointsAdd(NewPuntos);\r\n    //     if( pointsAdd === '1000' || pointsAdd === '5000' || pointsAdd === '7500' ){    \r\n    //         setWarningPoints('');\r\n    //     }else{\r\n    //         setWarningPoints('Debe seleccionar uno de los valores indicados.');\r\n    //     }\r\n    // }\r\n\r\n\r\n  return (\r\n    \r\n    <div id={id} className=\"Product\">\r\n        <figure>\r\n            <img src={img} alt={name}/>\r\n        </figure>\r\n        <div className=\"Info\">\r\n            <p>{category}</p>\r\n            <h4>{name} | <strong className=\"CostDet\">{cost} <img src={coin} alt=\"Points\"/> </strong></h4>\r\n        </div>\r\n        <div className=\"Icons\">\r\n            {\r\n                initPoints >= cost\r\n                ? <span className=\"Icon Cart\"></span>\r\n            : <span className=\"Icon PointsLess\"> <strong>You need {needPoints}</strong> <img src={coin} alt=\"Points\"/> </span>\r\n            }\r\n        </div>\r\n\r\n        {\r\n            initPoints >= cost\r\n            ? (\r\n                <div className=\"Hover\">\r\n                    <div className=\"vertical-center\">\r\n                        <h5>{cost} <img src={coin} alt=\"Points\"/></h5>\r\n                        <button onClick={ () => redeemProdFn(id,name,cost) }>Redeem now</button>\r\n                        {/* <button onClick={ () => modalRedeem.current.open() }>Redeem now</button> */}\r\n                    </div>\r\n                </div>\r\n            )\r\n            : (\r\n                <div className=\"Hover\">\r\n                    <div className=\"vertical-center\">\r\n                    <button onClick={ ()=> modalBuy.current.open() }>Buy points</button>\r\n                    {/* <button onClick={ ()=> openModalBuy() }>Buy points</button> */}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        {/* <div className=\"Hover\">\r\n            <div className=\"vertical-center\">\r\n                <h5>{cost} <img src={coin} alt=\"Points\"/></h5>\r\n                <button>Redeem now</button>\r\n            </div>\r\n        </div> */}\r\n\r\n        {\r\n            redeemProduct !== null\r\n            ? (<Modal ref={modalRedeem}>\r\n                <h5>Redeem now</h5>\r\n                <div className=\"ModalInfo\">\r\n                    \r\n                    {postResponse.info === ''\r\n                    ? (\r\n                        <div>\r\n                            <h6>¿Está seguro de canjear el producto <strong>{redeemProduct.name}</strong>?</h6>\r\n                            <p>Se descontarán <strong>{redeemProduct.cost}</strong> puntos de su cuenta.</p>\r\n                            <p>Su nuevo saldo será de <strong>{nuevoSaldo}</strong> puntos. </p>\r\n\r\n                            <div className=\"Actions\">\r\n                                <button className=\"Btn Cancel\" onClick={ () => modalRedeem.current.close() }>Cancel</button>\r\n\r\n                                <button className=\"Btn Ok\" onClick={ () => sendPostProduct(redeemProduct.id) }>OK</button>\r\n                            </div> \r\n                        </div>\r\n                    ) : (\r\n                    <div className=\"Resp\">\r\n                        \r\n                        {postResponse.status === 200 ? (\r\n                        <div>\r\n                            <div className=\"icon\">\r\n                                <span><img src={check} alt=\"Ok\"/></span>\r\n                            </div>\r\n                            <p> {postResponse.info} </p>\r\n                            <p> Su nuevo saldo es de <strong>{nuevoSaldoRedeemOk}</strong> puntos. </p>\r\n                            <button className=\"Btn Cancel\" onClick={ () => redeemResetMsgFn() }>Cerrar</button>\r\n                        </div>\r\n                        ) : (\r\n                        <div>\r\n                            <div className=\"icon\">\r\n                                <span><img src={fail} alt=\"error\"/></span>\r\n                            </div>\r\n                            <p> {postResponse.info} </p>\r\n                            <button className=\"Btn Cancel\" onClick={ () => redeemResetMsgFn() }>Cerrar</button>\r\n                        </div>\r\n                        ) }\r\n\r\n                    </div>\r\n                    )}\r\n                </div>\r\n            </Modal>)\r\n            : ''\r\n        }\r\n\r\n        <Modal ref={modalBuy} >\r\n            <ModalBuy modalBuyClose={modalBuyClose} />\r\n        </Modal>\r\n\r\n        {/* <Modal ref={modalRedeem}>\r\n            <h5>Redeem now</h5>\r\n            <div class=\"ModalInfo\">\r\n                <h6>¿Está seguro de canjear este producto?</h6>\r\n                <p>Se descontarán {redeemProduct.cost} puntos de su cuenta</p>\r\n            </div>\r\n        </Modal> */}\r\n        \r\n        {/* <Modal ref={modalBuy}>\r\n        <h5>Buy points</h5>\r\n                <div className=\"ModalInfo\">\r\n                    \r\n                    {pointsResponse === ''\r\n                    ? (\r\n                        <div>\r\n                            <h6>¿Necesita adquirir más puntos?</h6>\r\n                            <em>El sistema permite sumar 1000, 5000 ó 7500 puntos.</em>\r\n                            <p>Seleccione la cantidad de puntos a incrementar.</p>\r\n                            \r\n                             <LineSlider handlePoints={handlePoints} /> \r\n\r\n                            <Radios pointsAdd={pointsAdd} handlePoints={handlePoints} />\r\n                            \r\n                            {warningPoints !== ''\r\n                                ? (\r\n                                     <p>{warningPoints}</p>\r\n                                   )   \r\n                                : (\r\n                                    <p>Se sumarán <strong>{pointsAdd}</strong> puntos a su cuenta. <br/>\r\n                                    Su nuevo saldo será de <strong>{nuevoSaldoPoints}</strong> puntos. </p>\r\n                                )\r\n                            }\r\n                            <div className=\"Actions\">\r\n                                <button className=\"Btn Cancel\" onClick={ () => modalBuy.current.close() }>Cancel</button>\r\n\r\n                                <button className=\"Btn Ok\" onClick={ () => sendPostPoints( parseInt(pointsAdd)) }>OK</button>\r\n                            </div> \r\n                        </div>\r\n                    ) : (\r\n                    <div className=\"Resp\">\r\n                        <p> {pointsResponse} </p>\r\n                        <p>Su nuevo saldo es de <strong>{nuevoSaldoPointsOk}</strong> puntos. </p>\r\n                        <button className=\"Btn Cancel\" onClick={ () => pointsResetMsgFn() }>Cerrar</button>\r\n                    </div>\r\n                    )}\r\n                </div>\r\n        </Modal> */}\r\n\r\n          \r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Product;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Pagination.js",["121"],"import React, { useState } from \"react\";\r\n\r\nfunction usePagination(data, itemsPerPage) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const maxPage = Math.ceil(data.length / itemsPerPage); \r\n  \r\n\r\n  function currentData() {\r\n    const begin = (currentPage - 1) * itemsPerPage;  \r\n    const end = begin + itemsPerPage; \r\n    return data.slice(begin, end);\r\n  }\r\n\r\n  function next() {\r\n    setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\r\n  }\r\n\r\n  function prev() {\r\n    setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\r\n  }\r\n\r\n  function jump(page) {\r\n    const pageNumber = Math.max(1, page);\r\n    setCurrentPage(currentPage => Math.min(pageNumber, maxPage));\r\n  }\r\n  //console.log('next ', next, 'prev ', prev, 'jump ', jump, 'currentData ', currentData, 'currentPage ', currentPage, 'maxPage ', maxPage)\r\n  return { next, prev, jump, currentData, currentPage, maxPage };\r\n}\r\n\r\nexport default usePagination;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\PaginationMat.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Filters.js",["122","123"],"import React, {useState, useContext} from 'react';\r\nimport { AppContext } from \"../context/storeRewardsContext\";\r\nimport Loader from './Loader';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useStyles, AntSwitch} from '../data/config';\r\n\r\n\r\nfunction Filters() {\r\n    const { productsFetched, comboCategory, FilterProdcts, filterTerm, OrderProdcts, filterPrice, setFilterPrice, setFilterProducts, filterProducts,\r\n      filterAlpha, OrderAlpha} = useContext(AppContext);\r\n    //console.log('filterAlpha --->', filterAlpha);\r\n\r\n    const classes = useStyles();\r\n    const [activeFilter, setActiveFilter] = useState('');\r\n\r\n    const OrderByPrice = (orderType) => {\r\n      ///console.log('orderType ', orderType);\r\n      let newOrderProds = [];\r\n      setFilterPrice(orderType);\r\n      if(orderType === \"Lowest\"){\r\n        setActiveFilter(\"Lowest\");\r\n        newOrderProds = filterProducts.sort((a, b) => parseFloat(a.cost) - parseFloat(b.cost));\r\n      }else{\r\n        setActiveFilter(\"Highest\");\r\n        newOrderProds = filterProducts.sort((a, b) => parseFloat(b.cost) - parseFloat(a.cost));\r\n      }\r\n      //console.log('orderProds ', newOrderProds);\r\n      setFilterProducts(newOrderProds);\r\n      \r\n    }\r\n    \r\n\r\n  return (\r\n\r\n    <div className=\"UserActions\">\r\n\r\n        <div className=\"container\">\r\n            {productsFetched \r\n             ?\r\n                (\r\n                    <>\r\n                        <FormControl id=\"W-310\" className={classes.formControl}>\r\n                            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                            Categoría:\r\n                            </InputLabel>\r\n                            <Select\r\n                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            id=\"demo-simple-select-placeholder-label\"\r\n                            value={filterTerm}\r\n                            onChange={(e) => FilterProdcts(e.target.value)}\r\n                            // displayEmpty\r\n                            className={classes.selectEmpty}\r\n                            >\r\n                            <MenuItem value=\"Todas\">Todas</MenuItem>\r\n                            {comboCategory.map((element, i) => (\r\n                                //<option key={i} value={element}>{element}</option>\r\n                                <MenuItem key={i} value={element}>{element}</MenuItem>\r\n                            ))}\r\n                            {/* <MenuItem value={10}>Ten</MenuItem>\r\n                            <MenuItem value={20}>Twenty</MenuItem>\r\n                            <MenuItem value={30}>Thirty</MenuItem> */}\r\n                            </Select>\r\n                            <FormHelperText>Seleccionar categoría</FormHelperText>\r\n                        </FormControl>\r\n                        {/* <label>Categoría: </label> */}\r\n                        {/* <select onChange={(e) => getProducts(e.target.value)}>\r\n                            <option value=\"Todas\"> Todas </option>\r\n                            {comboCategory.map((element, i) => (\r\n                                <option key={i} value={element}>{element}</option>\r\n                            ))}\r\n                        </select> */}\r\n                        \r\n                        {/* <select onChange={(e) => FilterProdcts(e.target.value)}>\r\n                            <option value=\"Todas\"> Todas </option>\r\n                            {comboCategory.map((element, i) => (\r\n                                <option key={i} value={element}>{element}</option>\r\n                            ))}\r\n                        </select> */}\r\n\r\n                        <button name=\"Lowest\" className={`BtnFilterPrice ${activeFilter === 'Lowest' ? 'active' : ''}`} onClick={(e) => OrderByPrice(e.target.name)}>Lowest price</button>\r\n                        <button name=\"Highest\" className={`BtnFilterPrice Lst ${activeFilter === 'Highest' ? 'active' : ''}`} onClick={(e) => OrderByPrice(e.target.name)}>Highest price</button>\r\n\r\n                        <FormControl id=\"FilterAlpha\" className={classes.formControl}>\r\n                            <Typography component=\"div\">\r\n                                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                                <Grid item>Z-A</Grid>\r\n                                <Grid item>\r\n                                    <AntSwitch checked={filterAlpha} onChange={(e) => OrderAlpha(e.target.checked)} name=\"checkedAlpha\" />\r\n                                </Grid>\r\n                                <Grid item>A-Z</Grid>\r\n                                </Grid>\r\n                            </Typography>\r\n                        </FormControl>\r\n\r\n\r\n                        {/* <FormControl className={classes.formControl}>\r\n                            <Typography component=\"div\">\r\n                                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                                <Grid item>Highest price</Grid>\r\n                                <Grid item>\r\n                                    {/* checked={state.checkedC} * /}\r\n                                    <AntSwitch checked={filterPrice} onChange={(e) => OrderProdcts(e.target.checked)} name=\"checkedC\" />\r\n                                    {/* <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"OrderProdsEvt\" /> * /}\r\n                                </Grid>\r\n                                <Grid item>Lowest price</Grid>\r\n                                </Grid>\r\n                            </Typography>\r\n                        </FormControl> */}\r\n\r\n                        \r\n                        \r\n                    </>\r\n                )\r\n             :  <div className=\"WrapLoaderIn\"><em><span className=\"Loader Inline\"><Loader/></span>cargando categorias y filtros...</em></div>\r\n            }    \r\n        </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Filters;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Sidebar.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Modal.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\ProductRedeem.js",["124"],"import React from 'react';\r\n\r\nfunction ProductRedeem(props) {\r\n    const {idOp, idProd, category, cost, createDate, name, img} = props;\r\n    const str = createDate;\r\n    const date = str.substring(0, 10);//YYYY-MM-DD\r\n\r\n    const fields = date.split('-');\r\n    const year   = fields[0];\r\n    const month  = fields[1];\r\n    const day    = fields[2]\r\n    const dateOk  = day+'/'+month+'/'+year;  \r\n\r\n  return (\r\n    \r\n    <div id={idOp} className=\"Product Redeem\">\r\n        <figure>\r\n            <img src={img} alt={name}/>\r\n        </figure>\r\n        <div className=\"Info\">\r\n            <p>{category}</p>\r\n            <h4> <strong>{name}</strong> | {cost} points</h4>\r\n            <p> Canjeado el: {dateOk} </p>\r\n            <p> ID: {idOp} </p>\r\n        </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default ProductRedeem;\r\n","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\Home.js",["125"],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\History.js",["126","127"],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\LineSlider.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Radios.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\use-previous.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\ModalBuy.js",["128"],"import React, {useState, useContext, useRef } from 'react';\r\nimport { AppContext } from \"../context/storeRewardsContext\";\r\n//import LineSlider from './LineSlider';\r\nimport Radios from './Radios';\r\nimport check from '../assets/icons/check.svg';\r\nimport fail from '../assets/icons/fail.svg';\r\n\r\n\r\nfunction ModalBuy({modalBuyClose}){\r\n\r\n    const { initPoints, sendPostPoints, pointsResponse,\r\n        setPointsResponse, puntosCuentas, setPuntosCuentas } = useContext(AppContext);\r\n  \r\n      \r\n      const [pointsAdd, setPointsAdd] = useState('1000');\r\n      const [warningPoints, setWarningPoints] = useState('');\r\n      \r\n      const modalBuy = useRef(null);\r\n\r\n      const nuevoSaldoPoints = initPoints + parseInt(pointsAdd);\r\n      const nuevoSaldoPointsOk = puntosCuentas + parseInt(pointsAdd);\r\n  \r\n      \r\n      const pointsResetMsgFn = () => {\r\n          setPointsResponse({\r\n            info : '',\r\n            status: ''\r\n        });\r\n          setPuntosCuentas(null);\r\n          //modalBuy.current.close();\r\n          //TypeError: Cannot read property 'close' of null\r\n          modalBuyClose();\r\n      }\r\n  \r\n      const handlePoints = (e) => {\r\n          const NewPuntos = e.target.value;\r\n          console.log(typeof NewPuntos, ' ', NewPuntos);\r\n          setPointsAdd(NewPuntos);\r\n          if( pointsAdd === '1000' || pointsAdd === '5000' || pointsAdd === '7500' ){    \r\n              setWarningPoints('');\r\n          }else{\r\n              setWarningPoints('Debe seleccionar uno de los valores indicados.');\r\n          }\r\n      }\r\n \r\n    return(\r\n\r\n        <>\r\n       \r\n            <h5>Buy points</h5>\r\n            <div className=\"ModalInfo\">\r\n                \r\n                {pointsResponse.info === ''\r\n                ? (\r\n                    <div>\r\n                        <h6>¿Necesita adquirir más puntos?</h6>\r\n                        <em>El sistema permite sumar 1000, 5000 ó 7500 puntos.</em>\r\n                        <p>Seleccione la cantidad de puntos a incrementar.</p>\r\n                        \r\n                        {/* <LineSlider handlePoints={handlePoints} /> */}\r\n\r\n                        <Radios pointsAdd={pointsAdd} handlePoints={handlePoints} />\r\n                        \r\n                        {warningPoints !== ''\r\n                            ? (\r\n                                    <p>{warningPoints}</p>\r\n                                )   \r\n                            : (\r\n                                <p>Se sumarán <strong>{pointsAdd}</strong> puntos a su cuenta. <br/>\r\n                                Su nuevo saldo será de <strong>{nuevoSaldoPoints}</strong> puntos. </p>\r\n                            )\r\n                        }\r\n                        <div className=\"Actions\">\r\n                            {/* <button className=\"Btn Cancel\" onClick={ () => modalBuy.current.close() }>Cancel</button> */}\r\n                            <button className=\"Btn Cancel\" onClick={modalBuyClose}>Cancel</button>\r\n                            <button className=\"Btn Ok\" onClick={ () => sendPostPoints( parseInt(pointsAdd)) }>OK</button>\r\n                        </div> \r\n                    </div>\r\n                ) : (\r\n                <div className=\"Resp\">\r\n                    {/* <p> {pointsResponse} </p>\r\n                    <p>Su nuevo saldo es de <strong>{nuevoSaldoPointsOk}</strong> puntos. </p>\r\n                    <button className=\"Btn Cancel\" onClick={ () => pointsResetMsgFn() }>Cerrar</button> */}\r\n\r\n                        {pointsResponse.status === 200 ? (\r\n                        <div>\r\n                            <div className=\"icon\">\r\n                                <span><img src={check} alt=\"Ok\"/></span>\r\n                            </div>\r\n                            <p> {pointsResponse.info} </p>\r\n                            <p>Su nuevo saldo es de <strong>{nuevoSaldoPointsOk}</strong> puntos. </p>\r\n                            <button className=\"Btn Cancel\" onClick={ () => pointsResetMsgFn() }>Cerrar</button>}\r\n                        </div>\r\n                        ) : (\r\n                        <div>\r\n                            <div className=\"icon\">\r\n                                <span><img src={fail} alt=\"error\"/></span>\r\n                            </div>\r\n                            <p> {pointsResponse.info} </p>\r\n                            <button className=\"Btn Cancel\" onClick={ () => pointsResetMsgFn() }>Cerrar</button>\r\n                        </div>\r\n                        ) }\r\n\r\n\r\n\r\n                </div>\r\n                )}\r\n            </div>\r\n        \r\n        </>            \r\n\r\n    );\r\n}\r\nexport default ModalBuy;","C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\Loader.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\components\\CircleLoader.js",[],"C:\\Users\\Usuario\\Desktop\\rw\\store-pompei-nancy\\src\\PageNotFound.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":24},{"ruleId":"137","severity":1,"message":"138","line":69,"column":8,"nodeType":"139","endLine":69,"endColumn":10,"suggestions":"140"},{"ruleId":"133","severity":1,"message":"141","line":243,"column":9,"nodeType":"135","messageId":"136","endLine":243,"endColumn":18},{"ruleId":"133","severity":1,"message":"142","line":9,"column":30,"nodeType":"135","messageId":"136","endLine":9,"endColumn":44},{"ruleId":"133","severity":1,"message":"143","line":9,"column":46,"nodeType":"135","messageId":"136","endLine":9,"endColumn":56},{"ruleId":"133","severity":1,"message":"134","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":24},{"ruleId":"133","severity":1,"message":"144","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":18},{"ruleId":"133","severity":1,"message":"145","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":14},{"ruleId":"133","severity":1,"message":"146","line":12,"column":8,"nodeType":"135","messageId":"136","endLine":12,"endColumn":19},{"ruleId":"133","severity":1,"message":"147","line":17,"column":106,"nodeType":"135","messageId":"136","endLine":17,"endColumn":120},{"ruleId":"133","severity":1,"message":"148","line":17,"column":122,"nodeType":"135","messageId":"136","endLine":17,"endColumn":136},{"ruleId":"133","severity":1,"message":"149","line":18,"column":10,"nodeType":"135","messageId":"136","endLine":18,"endColumn":27},{"ruleId":"133","severity":1,"message":"150","line":1,"column":8,"nodeType":"135","messageId":"136","endLine":1,"endColumn":13},{"ruleId":"133","severity":1,"message":"151","line":16,"column":72,"nodeType":"135","messageId":"136","endLine":16,"endColumn":84},{"ruleId":"133","severity":1,"message":"152","line":16,"column":86,"nodeType":"135","messageId":"136","endLine":16,"endColumn":97},{"ruleId":"133","severity":1,"message":"153","line":4,"column":18,"nodeType":"135","messageId":"136","endLine":4,"endColumn":24},{"ruleId":"133","severity":1,"message":"154","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":21},{"ruleId":"133","severity":1,"message":"155","line":17,"column":11,"nodeType":"135","messageId":"136","endLine":17,"endColumn":25},{"ruleId":"156","severity":1,"message":"157","line":89,"column":1,"nodeType":"158","messageId":"159","endLine":89,"endColumn":86},{"ruleId":"133","severity":1,"message":"160","line":18,"column":13,"nodeType":"135","messageId":"136","endLine":18,"endColumn":21},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.","ArrayExpression",["163"],"'orderHist' is assigned a value but never used.","'filterProducts' is assigned a value but never used.","'filterTerm' is assigned a value but never used.","'LineSlider' is defined but never used.","'Radios' is defined but never used.","'usePrevious' is defined but never used.","'sendPostPoints' is assigned a value but never used.","'pointsResponse' is assigned a value but never used.","'setPointsResponse' is assigned a value but never used.","'React' is defined but never used.","'OrderProdcts' is assigned a value but never used.","'filterPrice' is assigned a value but never used.","'idProd' is assigned a value but never used.","'PaginationMat' is defined but never used.","'toggleMenuUser' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'modalBuy' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},"Update the dependencies array to be: [getProducts]",{"range":"166","text":"167"},[2430,2432],"[getProducts]"]